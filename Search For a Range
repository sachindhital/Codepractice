'''Given a sorted array of integers, find the starting and ending position of a given target value.

Your algorithmâ€™s runtime complexity must be in the order of O(log n).

If the target is not found in the array, return [-1, -1].

Example:

Given [5, 7, 7, 8, 8, 10] and target value 8,

return [3, 4].''''''
'''@SachinDhital'''

class Solution:
    def searchRange(self, a, b):
        # write your method here
        low=0
        high=len(a)-1
        init=-1
        while high>=low:
            mid=low+(high-low)//2
            if a[mid]==b and a[mid-1]<b:
                init=mid
                break
            elif a[mid]<=b:
                low=mid+1
            else:
                high=mid-1
        final=-1
        low=0
        high=len(a)-1
        while high>=low:
            mid=low+(high-low)//2
            if a[mid]==b and a[mid+1]>b:
                final=mid
                break
            elif a[mid]<=b:
                low=mid+1
            else:
                high=mid-1
        return [init,final]
            
